<?php
namespace CG\Web;
use CG\Web as w;
use CG as r;
use CG\DB as db;
use CG\Backend as be;
use CG\Util as u;

require_once __DIR__ . '/txprocessor.interface';

/**
 * @file
 * Class to generate transaction history CSV download.
 *
 */
class TxHistoryCSV implements TxProcessor {
  private $body = '';
  private $uids = [];
  private $dateValue = '';
  private $count = 0;
  private $runBalance = 0;
  private $baseUrl = null;
  private $totals = [];
  
  public function __construct($uids, $baseUrl, $start, $end) {
    global $mya;
    $this->uids = $uids;
    $this->baseUrl = $baseUrl;
    u\startDown($mya->mainQid . fmtDtRange($start, $end));
  }
  
  /**
   * Called before the first transaction.
   */
  public function hdr() {
    $csvRow = ray(t('Tx#, Date, Name, Purpose, From You, To You, Balance, Agent'));
    u\csv($csvRow);
    foreach (ray('fromyou toyou') as $k => $fld) $this->totals[$fld] = 0;
  }

  /**
   * Called before each transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function txnHdr($info, $extraClass = '') {
  }

  /**
   * Called for each entry of a transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function processEntry($info, $parity = NULL) {
    if (in_array($info['uid'], $this->uids)) return;
    extract(just('xid created name description amount balance agt banking', $info, null));
//    $frombank = $banking ? round(-$amount, 2) : 0;
    $fromyou = round($amount < 0 ? -$amount : 0, 2);
    $toyou = round($amount > 0 ? $amount : 0, 2);
    $balance = round($balance, 2);
//    $net = round($amount, 2);
    u\csv([$xid, fmtDt($created, 'yyyy-MM-dd'), $name, $description, $fromyou, $toyou, $balance, r\qid($agt)]);
    foreach (ray('fromyou toyou') as $k => $fld) $this->totals[$fld] += $$fld;
  }

  /**
   * Called after each transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function txnFtr($info) {
  }

  /**
   * Called after the last transaction.
   */
  public function ftr() {
    $csvRow = ['', '', 'TOTALS', '', $this->totals['fromyou'], $this->totals['toyou'], '', ''];
    u\csv($csvRow);
  }
}
